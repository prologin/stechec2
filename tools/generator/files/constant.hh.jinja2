// SPDX-License-Identifier: GPL-2.0-or-later
// Copyright (c) 2012-2020 Association Prologin <association@prologin.org>

#pragma once

#include <functional> // needed for std::hash

{%- for constant in game.constant %}
{{ ("/// " + constant.cst_comment)|wordwrap(79, False, '\n/// ') }}
#define {{ constant.cst_name }} {{ constant.cst_val }}
{% endfor %}

{%- for enum in game.enum %}

{{ ("/// " + enum.enum_summary)|wordwrap(79, False, '\n/// ') }}
typedef enum {{ enum.enum_name }}
{
    {%- set padding = "%%-%ds"|format(enum.enum_field|map('first')|map('length')|max + 1) %}
    {%- for field_name, field_comment in enum.enum_field %}
    {{ padding | format(field_name|upper + ",") }} ///< {{ field_comment }}
    {%- endfor %}
} {{ enum.enum_name }};
{% endfor %}

{%- for struct in game.struct %}
{{ ("/// " + struct.str_summary)|wordwrap(79, False, '\n/// ') }}
typedef struct {{ struct.str_name }}
{
    {%- for field_name, field_type, field_comment in struct.str_field %}
    {{ field_type|cxx_type }} {{ field_name }}; ///< {{ field_comment }}
    {%- endfor %}
} {{ struct.str_name }};
{% endfor %}
